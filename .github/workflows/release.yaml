name: Web Release
on:
  release:
    types:
      - released
      - prereleased
  workflow_dispatch:

jobs:
  deploy-ghcr:
    name: Build and Push to GHCR
    runs-on: ubuntu-latest
    outputs:
      tags: ${{ steps.docker-ghcr.outputs.tags }}
    steps:
      - uses: actions/checkout@v2
        name: Check out code

      - uses: mr-smithers-excellent/docker-build-push@v5
        id: docker-ghcr
        with:
          image: ${{ github.repository }}
          addLatest: true
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
          dockerfile: Dockerfile

  deploy-ecr:
    name: Build and Push to ECR
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        name: Check out code

      - uses: mr-smithers-excellent/docker-build-push@v5
        id: docker-ecr
        with:
          image: ${{ github.repository }}
          registry: ${{ secrets.AWS_ECR_REGISTRY }}
          addLatest: true
          dockerfile: Dockerfile
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

  deploy-ecs:
    name: Deploy to ECS
    runs-on: ubuntu-latest
    needs: [ deploy-ecr ]
    steps:
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Download task definition
        run: |
          aws ecs describe-task-definition --task-definition ${{ secrets.AWS_TASK_DEFINITION }} --query taskDefinition > task-definition.json

      - name: Fill in the new image ID in the Amazon ECS task definition
        id: task-def
        uses: aws-actions/amazon-ecs-render-task-definition@v1
        with:
          task-definition: task-definition.json
          container-name: ${{ secrets.AWS_ECS_CONTAINER }}
          image: ${{ secrets.AWS_ECR_REGISTRY }}/${{ github.repository}}:${{ github.ref_name }}

      - name: Deploy Amazon ECS task definition
        uses: aws-actions/amazon-ecs-deploy-task-definition@v1
        with:
          task-definition: ${{ steps.task-def.outputs.task-definition }}
          service: ${{ secrets.AWS_ECS_SERVICE }}
          cluster: ${{ secrets.AWS_ECS_CLUSTER }}
          wait-for-service-stability: true